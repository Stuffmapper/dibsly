quit
dib.alerts
conversation
concersation
c
parsed
next
parsed
parsed_length
c
next
c
link["content"]
link[:content]
link
c
email.message["global_merge_vars"]
email.message["from_email"]
email.message["global_merge_vals"]
email.message["html"]
email.message.keys
JSON.parse(email.message)
email.message[0]
email.message["html"]
email.message
email.message.html
email.message[:html]
email.messagge[:html]
email.messagge[:html}
email.messagge.html
email.message["global_merge_var"]
email.message.["global_merge_var"]
email.message.global_merge_vars
email.message
email.mesagge
email.template_content
email
email['global_merge_vars']
email.global_merge_vars
  email = MandrillMailer::deliveries.detect{ |mail| mail.template_name == 'email-verification' && mail.message['to'].any? { |to| to[:email] == @current_user.email }}
  }email = MandrillMailer::deliveries.detect { |mail| mail.template_name == 'email-verification' && mail.message['to'].any? { |to| to[:email] == @current_user.email }}
    mail.message['to'].any? { |to| to[:email] == @current_user.email }
    mail.template_name == 'email-verification' &&
  email = MandrillMailer::deliveries.detect { |mail|
MandrillMailer::deliveries
c
MandrillMailer::deliveries
c
MandrillMailer::deliveries
MandrillMailer::deliveries.clear
c
MandrillMailer::deliveries.clear
MandrillMailer::deliveries
next
MandrillMailer::deliveries.reload!
MandrillMailer::deliveries
reload!
reload
MandrillMailer::deliveries
MandrillMailer::deliver
MandrillMailer::deliveries
MandrillMailer::deliveries.reload
next
MandrillMailer::deliveries.reload
MandrillMailer
MandrillMailer::deliveries
c
find('.item-details-link').click
find(:text, 'Item details').click
find(:link, 'Item details').click
page.find(a,'Item details')
page.find_text('Item details')
page.find('Item details')
click_link('Item details')
c
click_link('Item details')
c
click_link('My Stuff')
c
click_link('My Stuff')
c
