(function() {
  var controllers;

  controllers = angular.module('controllers');

  controllers.controller('MenuCtrl', ['$scope','$q','$stateParams','LocalService',
   'LocationService','MapsService','MarkerService','UserService', 'AlertService','$rootScope',
    function($scope,$q,$stateParams,LocalService, 
      LocationService, MapsService, MarkerService, UserService, AlertService, $rootScope) {
      //TODO - clean up 

       // $SCOPE OBJECTS
      $scope.menuHeight = 'menu-0';
      $scope.mapHeight = 'map-0';

      $scope.stuff = {};


      // $SCOPE FUNCTIONS


      $scope.centerMap = function(){
        var center;
        return LocationService.get().then(
          function(position){
            center = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            LocalService.set('mapcenter', JSON.stringify(center))
          },
          function(error){
            MapsService.getCenter()
            .then(function (mapcenter){
              return center = mapcenter;
            })
          }
         )
         .then( function(){

           return MapsService.panTo(center);
         });
      };



      // $scope.updateMarkers = function(coords) {
      //   var defer = $q.defer();
      //   //TODO turn 15 into a variable
      //   var box = MapsService.getBoundingBox(coords, 15);
      //   $http({
      //     url: '/api/posts/geolocated',
      //     params: {
      //       nwLat: box.nw.lat,
      //       seLat: box.se.lat,
      //       nwLng: box.nw.lng,
      //       seLng: box.se.lng
      //     }
      //   })
      //   .success(function(data) {
      //     var i, len, marker, ref, results;
      //     ref = data.posts;
      //     for (i = 0, len = ref.length; i < len; i++) {
      //       marker = ref[i];
      //       if (marker.originalImage === 'missing') {
      //         marker.originalImage = '<%= asset_path('processing.png')%>';
      //         marker.image_url = '<%= asset_path('processing.png')%>';
      //       }
      //       marker.currentUser = UserService.currentUser;
      //       MarkerService.setMarker(marker);
      //     };
      //     defer.resolve('markers updated')
      //   });
      //   return defer.promise;
      // };

      //LISTENERS

      $rootScope.$on('$stateChangeSuccess', 
        function(event, toState, toParams, fromState, fromParams){ 
          switch(toState.name) {
            case 'getStuff':
              $scope.menuHeight = 'menu-0';
              $scope.mapHeight = 'map-0';
              MapsService.resizeMap()
              break;
            case 'giveStuff':
              $scope.menuHeight = 'menu-1-1';
              $scope.mapHeight = 'map-1-1';
              MapsService.resizeMap()
              break;
            case 'myStuff':
              $scope.menuHeight = 'menu-2';
              $scope.mapHeight = 'map-2';
              MapsService.resizeMap()
              break;
            default:
              $scope.menuHeight = 'menu-0';
              $scope.mapHeight = 'map-0';
              MapsService.resizeMap()
        }
      })

    }
  ]);

}).call(this);
