
controllers = angular.module('controllers')



controllers.controller('StuffCtrl', [ '$scope','$window','$modal', 'MapsService','UserService','AlertService', '$http',
 ($scope, $window, $modal, MapsService, UserService, AlertService, $http ) ->
    $scope.UserService = UserService;
    $scope.$watchCollection('UserService',->
        $scope.currentUser = UserService.currentUser
     )
    $scope.viewing = false
    $scope.currentPost = { editing: false, viewing: false}
    $scope.mapCenter = '47.6097,-122.3331'

    $scope.markers = {}
    $scope.curb_only = false
    $scope.backup = {}
    $scope.edit = (post)->
      $scope.currentPost = post
      $scope.currentPost.editing =true

    $scope.viewDetails = (post)->
      $scope.currentPost = post
      $scope.currentPost.viewing = true

    self = this


    $scope.onTheCurb = ->
      for key,marker of $scope.backup
        console.log(marker)
        if marker.on_the_curb ==  $scope.curb_only
          delete $scope.markers[key]
        else
          $scope.markers[key] = marker
      $scope.curb_only = !$scope.curb_only



    updateMarkers = ->
      neBounds = $scope.map.getBounds().getNorthEast()
      swBounds = $scope.map.getBounds().getSouthWest()
      $http(
        url: '/posts/geolocated'
        params:
          neLat: neBounds.lat()
          swLat: swBounds.lat()
          neLng: neBounds.lng()
          swLng: swBounds.lng()
        ).success((data)->
          for marker in data.posts
            if not $scope.markers[marker.id]
              marker.viewing = false
              $scope.markers[marker.id] = marker
              $scope.backup[marker.id] = marker )

    $scope.$on('mapInitialized', (evt, map) ->
      self = this
      updateMarkers()
      # if $scope.postMarker
      #   $scope.postMarker.setMap($scope.map)
      google.maps.event.addListener(map, 'dragend', updateMarkers )
      google.maps.event.addListener(map, 'zoom_changed', updateMarkers )
      navigator.geolocation.getCurrentPosition((position)->
        current_location = new google.maps.LatLng(position.coords.latitude, position.coords.longitude)
        $scope.$apply(->
          map.panTo(current_location)
          )
        )
      )
    $scope.toggleView = (event, id, markers )->
      self.$scope.markers[id].viewing = true

    $scope.post = {}
    $scope.$on("fileSelected",
                (event, args) -> $scope.$apply( ->
                   $scope.file = args.file
                   reader = new FileReader();
                   reader.onload = (event2)->
                     canvas = document.getElementById("sm-thumbnail")
                     ctx = canvas.getContext('2d');
                     img = new Image()
                     img.onload = ->
                       canvas.width = img.width
                       canvas.height = img.height
                       ctx.drawImage(img,0,0)
                     img.src = event2.target.result
                   reader.readAsDataURL(args.file)

                ))


    $scope.loading = false
    $scope.mystuff = {}
    $scope.togglemap = (height)->
       angular.element("map").height(height)
       $scope.fullMap = !$scope.fullMap
       google.maps.event.trigger(map, 'resize')




    $scope.mystuff = {posts:{}, dibs:{}}
    $scope.getMyStuff = ->
        $http.get( '/my-stuff')
        .success(
            (data)->
                for marker in data.posts
                  $scope.mystuff.posts[marker.id] = marker

          )
        $http.get( '/my-dibs')
        .success(
            (data)->
                console.log( data  )
                $scope.mystuff.dibs = data['posts'] )

    $scope.removeDibber = (id, description, postID )->
      report = {description: description}
      $http.post( '/dibs/' + id + '/removedib',  {report: report} )
      .success(  console.log( "number is !", postID)
        $scope.mystuff.posts[postID]['dibbable'] = true )

    $scope.markGone =(id)->
      post = {status: 'gone'}
      $http.post( "/posts/" + id + "/update", post )
      .success ->
        AlertService.add('success', "Marked as gone")
      .error ->
        AlertService.add('warning', "Something went wrong")



    $scope.submitPost = ->
        $scope.loading = true
        UserService.check(->)
        if UserService.currentUser
            formdata = new FormData();
            formdata.append('latitude',  if $scope.post.latitude then $scope.post.latitude else $scope.map.getCenter().lat())
            formdata.append('longitude', if $scope.post.longitude then $scope.post.longitude else $scope.map.getCenter().lng() )
            formdata.append('category', $scope.post.category)
            formdata.append('description', $scope.post.description)
            formdata.append('on_the_curb', $scope.post.on_the_curb)
            formdata.append('image', $scope.file);
            $http.post( "/posts", formdata, {
                headers: {'Content-Type': undefined}
                transformRequest: angular.identity
                }).success (data, status, headers, config) ->
                    AlertService.add('success', "You've Posted Your Stuff")
                    canvas = document.getElementById("sm-thumbnail")
                    context = canvas.getContext("2d");
                    context.clearRect(0, 0, canvas.width, canvas.height)
                    $scope.file = null
                    $scope.post = {}
                    $scope.loading = false
                    updateMarkers()
                    $scope.postMarker.setMap(null)
                .error (data) ->
                    for key, value of data
                        AlertService.add('danger', key + ' ' + value )
                    $scope.loading = false
        else
            AlertService.add('danger', 'Please sign in to continue' )
            $modal.open
                templateUrl:'signIn.html',
                controller:'SignUpCtrl'
    $scope.startMapper = ->
      callback = -> $scope.postMarker.setMap($scope.map)
      if $scope.postMarker
          $scope.postMarker.setMap($scope.map)
      else
        updatePostMarker( callback, 6000)

    updatePostMarker = (callback, timeout)->

      self = this
      self.callback = callback
      resetMarker = ->
        if $scope.postMarker
          $scope.postMarker.setMap(null)
      updateMarker = (center)->
        resetMarker()
        $scope.postMarker = new google.maps.Marker(position: center,draggable:true, map:$scope.map,title:'Your Stuff',icon: '<%= asset_path('red-pin.png')%>')
        updatePost = ->
          $scope.post.latitude = $scope.postMarker.getPosition().lat()
          $scope.post.longitude = $scope.postMarker.getPosition().lng()
        google.maps.event.addListener($scope.postMarker, 'dragend', updatePost )
        google.maps.event.addListener($scope.postMarker, 'idle', updatePost )
        $scope.map.setZoom(12)
        $scope.map.panTo(center)
        $scope.post.latitude = $scope.postMarker.getPosition().lat()
        $scope.post.longitude = $scope.postMarker.getPosition().lng()
        $scope.postMarker.setMap(null)
        callback()
      centerSuccess = (position)->
        center = new google.maps.LatLng(position.coords.latitude, position.coords.longitude)
        updateMarker(center)
      centerError = ->
        console.log("geolocation not supported or error")
        center = $scope.map.getCenter()
        updateMarker(center)
      geoOptions = {
        enableHighAccuracy: true,
        maximumAge:300000,
        timeout: timeout }
      navigator.geolocation.getCurrentPosition(centerSuccess,centerError, geoOptions)

    updatePostMarker(null, 25000)


])
